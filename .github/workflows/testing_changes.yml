# for simplicity we are checking compilation and testing everything on the Ubuntu environment only.

name: testing_changes

on: 
    push:
      branches-ignore:
        - 'main'
        - 'master'
        - 'draft/*'
    pull_request:
      types: [opened, reopened, synchronize]
    release:
      types: [created, edited]
    workflow_dispatch:
      inputs:
        # See https://hub.docker.com/r/jacobalberty/firebird for supported versions
        # and further details on input environment variables
        # you may only define up to 10 `inputs` for a `workflow_dispatch` event
        version:
          description: 'Version of firebirdsql to use: latest, v4, v4.0, v4.0.2, v3, v3.0, v3.0.10, 2.5-ss, 2.5-sc'
          required: false
          default: 'latest'
        port:
          description: 'Port published in the host for connecting in the database. Default: 3050.'
          required: false
          default: '3050'
        firebird_database:
          description: 'Optional name for creating a database with the container'
          required: false
          default: ''
        firebird_user:
          description: 'Optional name for creating a user that is database owner with the container'
          required: false
          default: ''
        firebird_password:
          description: 'Optional password for the user created'
          required: false
          default: ''
        isc_password:
          description: 'Default sysdba user password, if left blank a random 20 character password will be set instead'
          required: false
          default: ''
        timezone:
          description: 'Server TimeZone. (i.e. America/Sao_Paulo)'
          required: false
          default: ''
        enable_legacy_client_auth:
          description: 'If this is set to "true" it will allow legacy clients to connect and authenticate.'
          required: false
          default: ''
        enable_wire_crypt:
          description: 'If this is set to "true" it will allow allow compatibility with Jaybird 3.'
          required: false
          default: ''
        data_type_compatibility:
          description: 'Enable datatype compatibility for clients with previews versions: `3.0` and `2.5`.'
          required: false
          default: ''
        # container_name:
        #   description: 'The name for tagging the container'
        #   required: false
        #   default: 'firebirdsql'

jobs:
  ci:
    name: ci-testing_changes
    strategy:
      # max-parallel: 1
      matrix:
        target: [latest, v4, v4.0, v3, v3.0, 2.5-ss, 2.5-sc]
        os: [ "ubuntu-latest" ]
        #TODO: os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
    runs-on: "${{ matrix.os }}"

    steps:
      - name: Testing FirebirdSQL version ${{ matrix.target }} triggered by ${{ github.event_name }} with SHA ${{ github.event.release.tag_name }}
        if: github.event_name != 'release'
        uses: ./
        with:
          version: '${{ matrix.target }}'
          firebird_database: 'my_database.fdb'
          firebird_user: 'my_user'
          firebird_password: 'my_password'

      - name: Testing FirebirdSQL version ${{ matrix.target }} triggered by ${{ github.event_name }} with version ${{ github.event.release.tag_name }}
        if: github.event_name == 'release'
        uses: juarezr/firebirdsql-github-action@main
        with:
          version: '${{ matrix.target }}'
          firebird_database: 'my_database.fdb'
          firebird_user: 'my_user'
          firebird_password: 'my_password'

      - name: Install FirebirdSQL clients
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends firebird3.0-utils libfbclient2

      - name: Testing Connection and Query to ${{ matrix.target }}
        run: |
          for i in {0..120} ; do nc -z localhost 3050 && echo "Up: ${i} secs" && break; sleep 1; done
          echo 'select * from rdb$database;' | isql-fb -bail -quiet -z -user my_user -password my_password 'localhost:/firebird/data/my_database.fdb'

      - name: Stop Container
        run: |
          docker rm --volumes --force firebirdsql

# end of file
