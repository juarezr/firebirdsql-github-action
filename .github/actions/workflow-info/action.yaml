name: 'Report Workflow Information'
description: 'Reusable action meant to be used in workflow steps'
branding:
  icon: 'watch'
  color: 'green'

inputs:
  title:
    description: 'A reference to put in the report title'
    required: true
    default: 'the Job'
  parameters:
    description: 'Input variables used in Job'
    required: false
  content:
    description: 'Content to put in the report'
    required: false
outputs:
  status:
    description: "Return report status"
    value: ${{ steps.report_workflow_generation.outputs.status }}
runs:
  using: "composite"
  steps:
    - name: Report Workflow Information
      id: report_workflow_generation
      env: 
        REPORT_PARAMS: '${{ inputs.parameters }}'
        REPORT_CONTENT: '${{ inputs.content }}'
      shell: bash
      run: |
        echo "::group::Generating report" 
        echo "status=started" >> "${GITHUB_OUTPUT}";

        dump_ctx(){
          echo "::group::Context ${1:-Unknown}"
          local text;
          if ! text="$(cat -)"; then printf 'Failed to dump context for %s\n' "${1:-Unknown}" >> "${GITHUB_STEP_SUMMARY}"; fi
          text="${text#"${text%%[![:space:]]*}"}"
          if test "${#text}" -gt 3; then
            printf '\n### %s Context\n\n\n```json\n%s\n```\n' "${1:-Unknown}" "${text:-Nothing in context}" >> "${GITHUB_STEP_SUMMARY}";
          fi
          echo "::endgroup::";
        };

        printf '# Workflow Information on ${{ inputs.title }}\n\n' >> "${GITHUB_STEP_SUMMARY}";
        printf '\n## Event Information\n\n' >> "${GITHUB_STEP_SUMMARY}";
        echo '- github.ref_name: ${{ github.ref_name }}' >> "${GITHUB_STEP_SUMMARY}";
        echo '- github.sha: ${{ github.sha }}' >> "${GITHUB_STEP_SUMMARY}";

        echo "${REPORT_PARAMS:-}" | dump_ctx "Parameters";
        if test -n "${REPORT_CONTENT:-}"; then
          printf '\n## Summary\n\n' >> "${GITHUB_STEP_SUMMARY}";
          echo "${REPORT_CONTENT:-}" >> "${GITHUB_STEP_SUMMARY}";
        fi

        printf '\n## Context Information\n' >> "${GITHUB_STEP_SUMMARY}";
        echo '${{ toJson(runner) }}' | dump_ctx "Runner";
        echo '${{ toJson(job) }}' | dump_ctx "Job";

        echo "status=finished" >> "${GITHUB_OUTPUT}";
        echo "::endgroup::"

